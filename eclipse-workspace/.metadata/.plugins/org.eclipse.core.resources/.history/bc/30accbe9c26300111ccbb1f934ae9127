package com.tagabag.activities;

import java.util.ArrayList;

import android.content.Intent;
import android.database.Cursor;
import android.graphics.drawable.AnimationDrawable;
import android.nfc.NdefMessage;
import android.nfc.NdefRecord;
import android.nfc.NfcAdapter;
import android.nfc.Tag;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import android.widget.ImageView;

import com.google.android.apps.analytics.GoogleAnalyticsTracker;
import com.tagabag.App;
import com.tagabag.R;
import com.tagabag.db.NewDataBase;
import com.tagabag.models.Bag;


public class NfcFoundExternally extends NfcForegroundDispatchActivity {
	static final String TAG = "ViewTag";

	NewDataBase db;

	ImageView animation;

	String message;
	App app;
	AnimationDrawable frameAnimation;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.nfc_searching);

		app = (App) getApplication();
		app.isNfcState = true;		

		db=new NewDataBase(this);

		app.getAddress(null);
		
		GoogleAnalyticsTracker tracker = GoogleAnalyticsTracker.getInstance();
		tracker.startNewSession(getString(R.string.analyticsId), this);
		tracker.trackEvent(getString(R.string.analytics_startup), getString(R.string.analytics_startup_from_scan), getString(R.string.analytics_startup_label), 1);
		tracker.dispatch();		

		byte[] id=getIntent().getByteArrayExtra(NfcAdapter.EXTRA_ID);
		
		
		if (id == null) {
			finish();
			return;
		}
		hexContent=getHexString(id);

		if (hexContent == null) {
			finish();
			return;
		}
		
		Log.d(TAG,"hexContent="+hexContent);
		
		Cursor c=db.getActiveBagsByTagIdCursor(hexContent, Bag.TAG_TYPE_NFC);
		Intent newIntent;
		ArrayList<Bag> bags = db.getBags(c);
		
		if (bags.size()==0) {
			newIntent = new Intent(this, BagNotYours.class);			
			startActivity(newIntent);
		}
		else {


			newIntent = new Intent(this, Tagging.class);
			newIntent.putExtra(App.BAG_EXTRA, bags.get(0));

			startActivity(newIntent);
		}
	}


	private NdefMessage[] resolveNfcIntent(Intent intent) {
		// Parse the intent
		String action = intent.getAction();
		if (NfcAdapter.ACTION_TAG_DISCOVERED.equals(action)) {
			// When a tag is discovered we send it to the service to be saved. We
			// include a PendingIntent for the service to call back onto. This
			// will cause this activity to be restarted with onNewIntent(). At
			// that time we read it from the database and view it.
			Parcelable[] rawMsgs = intent.getParcelableArrayExtra(NfcAdapter.EXTRA_NDEF_MESSAGES);
			NdefMessage[] msgs;
			if (rawMsgs != null) {
				msgs = new NdefMessage[rawMsgs.length];
				for (int i = 0; i < rawMsgs.length; i++) {
					msgs[i] = (NdefMessage) rawMsgs[i];
				}
			} else {
				// Unknown tag type
				byte[] empty = new byte[] {};
				NdefRecord record = new NdefRecord(NdefRecord.TNF_UNKNOWN, empty, empty, empty);
				NdefMessage msg = new NdefMessage(new NdefRecord[] {record});
				msgs = new NdefMessage[] {msg};
			}
			return msgs;
			
		} else {
			Log.e(TAG, "Unknown intent " + intent);
			
			return null;
		}
	}






}

