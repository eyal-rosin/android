package com.tagabag.activities;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;

import org.json.me.JSONException;
import org.json.me.JSONObject;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.View;

import com.facebook.android.AsyncFacebookRunner;
import com.facebook.android.AsyncFacebookRunner.RequestListener;
import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.FacebookError;
import com.tagabag.App;
import com.tagabag.R;
import com.tagabag.models.LoginObject;
import com.tagabag.models.SocialNetworks;
import com.tagabag.network.SignupNetworkTask;
import com.tagabag.parsers.BaseParser;

public class Login1 extends GetSessionActivity {

	static final String TAG = "login1";

	String mAccessToken;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login1);

	}

	public void signupFacebook(View v) {

		final SharedPreferences settings = getSharedPreferences(App.MAIN_PREFS,0);
		String token = settings.getString(App.FACEBOOK_TOKEN_PREF,"");

		final SocialNetworks sn = new SocialNetworks(this);
		final Facebook mFacebook = sn.getFacebook();

		if (token.equals("")) {			
			Log.d(TAG,"dont have token");
			sn.getFacebookAuthentication(new com.facebook.android.Facebook.DialogListener() {
				@Override
				public void onComplete(Bundle values) {
					showPd();
					try {		

						String token = mFacebook.getAccessToken();

						SharedPreferences.Editor editor = settings.edit();
						editor.putString(App.FACEBOOK_TOKEN_PREF, token);
						editor.commit();
						getFacebookName(mFacebook, token);

					}catch(Exception e){
						e.printStackTrace();
					}


				}

				public void onFacebookError(FacebookError error) {}
				public void onError(DialogError e) {}			
				public void onCancel() {}

			});
		
		}
		else {
			Log.d(TAG,"do have token");
			showPd();
			getFacebookName(mFacebook, token);
		}





	}


	public void getFacebookName(Facebook facebook, String accessToken) {
		mAccessToken = accessToken;
		AsyncFacebookRunner mAsyncRunner = new AsyncFacebookRunner(facebook);
		Bundle bundle = new Bundle();
		bundle.putString("fields", "name");
		bundle.putString("access_token", accessToken);
		mAsyncRunner.request("me", bundle, new NameRequestListener());
	}

	public void signupEmail(View v) {
		Intent i=new Intent(this,Registration.class);
		startActivity(i);
	}

	public void login(View v) {
		Intent i=new Intent(this,Login.class);
		startActivity(i);
	}



	public class NameRequestListener implements RequestListener {

		public void onComplete(final String response, Object state) {
			Log.d("fb","onComplete1:  response="+response);

			new Thread() {
				public void run() {

					String name;
					try {
						JSONObject obj = new JSONObject(response);
						name = obj.getString("name");

						final SharedPreferences settings = getSharedPreferences(App.MAIN_PREFS,0);
						SharedPreferences.Editor editor = settings.edit();					    
						editor.putString(App.NAME_PREF, name);
						editor.commit();

					} catch (JSONException e) {				
						e.printStackTrace();
						return;
					}

					SignupNetworkTask signupNetworkTask = new SignupNetworkTask(mAccessToken, name);    				
					LoginObject response = (LoginObject) signupNetworkTask.getResult();

					if (response == null) {
						customDialog(getString(R.string.connection_error_title), getString(R.string.connection_error),false);
					}
					else if (response.mStatus==BaseParser.STATUS_OK || response.mStatus==BaseParser.USER_EXISTS) {

						if (response.mStatus==BaseParser.USER_EXISTS) {    						
							if (!loadServerData(null, null, null, response.mSessionId)) {
								customDialog(getString(R.string.connection_error_title), getString(R.string.connection_error),false);
								return;
							}
						}
						else {    					    						
							SharedPreferences settings = getSharedPreferences(App.MAIN_PREFS,0);
							SharedPreferences.Editor editor = settings.edit();    				    
							editor.putString(App.SEESSION_ID_PREF, response.mSessionId);	    				    
							editor.commit();
						}

						App.getInstance().setSessionId(response.mSessionId);


						customDialog(getString(R.string.success), getString(R.string.registration_complete), new Runnable() {
							public void run() {
								Intent intent = new Intent(Login1.this, InitialMenu.class);
								startActivity(intent);
							}
						});
					} 
					else {
						customDialog(getString(R.string.connection_error_title), getString(R.string.connection_error),false);
						return;
					}

				}
			}.start();


		}

		public void onIOException(IOException e, Object state) {
			Log.d("fb","onIOException:  e="+e);

		}

		@Override
		public void onFileNotFoundException(FileNotFoundException e,
				Object state) {
			Log.d("fb","onFileNotFoundException:  e="+e);

		}

		@Override
		public void onMalformedURLException(MalformedURLException e,
				Object state) {
			Log.d("fb","onMalformedURLException:  e="+e);

		}

		@Override
		public void onFacebookError(FacebookError e, Object state) {
			Log.d("fb","onFacebookError:  e="+e);

		}
	}



}

